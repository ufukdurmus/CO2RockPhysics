function [C11,C33,C13,C55,C66]= Maxwell_ani_shale(C0_11,C0_33,C0_13,C0_55,C0_66,K1,G1,K2,G2,K3,G3,v1,v2,v3,gamma1,gamma2,gamma3)

% Coded by Ufuk Durmus
% Last Updated 06/04/2019

% see Sevostianov_2014C & Sayers_2013

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Inputs here

lambda1 = K1-(2/3)*G1; %Lame Parameter of inclusion 1

lambda2 = K2-(2/3)*G2; %Lame Parameter of inclusion 2

lambda3 = K3-(2/3)*G3; %Lame Parameter of inclusion 3

% Convert aspect ratios(the 2005 paper using scale of a/c instead of c/a)
gamma1 = 1./gamma1;
gamma2 = 1./gamma2;
gamma3 = 1./gamma3;

% Define elastic stiffness tensor of the matrix

% Rock Matrix
Cij_0=zeros(6,6);

    Cij_0(1,1)=C0_11;
    Cij_0(3,3)=C0_33;
    Cij_0(5,5)=C0_55;
    Cij_0(4,4)=Cij_0(5,5);
    Cij_0(6,6)=C0_66;

    Cij_0(1,2)=Cij_0(1,1)-2*Cij_0(6,6);
    Cij_0(1,3)=C0_13;
    Cij_0(2,1)=Cij_0(1,2);
    Cij_0(3,1)=Cij_0(1,3);
    

%Inclusion 1
Cij_1=zeros(6,6);

for i=1:6
    if i<4
        Cij_1(i,i)=lambda1+2*G1;
    else
        Cij_1(i,i)=G1;
    end
    Cij_1(1,2)=lambda1;
    Cij_1(1,3)=lambda1;
    Cij_1(2,1)=lambda1;
    Cij_1(3,1)=lambda1;
    Cij_1(3,2)=lambda1;
    Cij_1(2,3)=lambda1;
end

%Inclusion 2
Cij_2=zeros(6,6);

for i=1:6
    if i<4
        Cij_2(i,i)=lambda2+2*G2;
    else
        Cij_2(i,i)=G2;
    end
    Cij_2(1,2)=lambda2;
    Cij_2(1,3)=lambda2;
    Cij_2(2,1)=lambda2;
    Cij_2(3,1)=lambda2;
    Cij_2(3,2)=lambda2;
    Cij_2(2,3)=lambda2;
end

%Inclusion 3
Cij_3=zeros(6,6);

for i=1:6
    if i<4
        Cij_3(i,i)=lambda3+2*G3;
    else
        Cij_3(i,i)=G3;
    end
    Cij_3(1,2)=lambda3;
    Cij_3(1,3)=lambda3;
    Cij_3(2,1)=lambda3;
    Cij_3(3,1)=lambda3;
    Cij_3(3,2)=lambda3;
    Cij_3(2,3)=lambda3;
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Appendix B       %Tensorial Basis
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
C0_1 = (Cij_0(1,1)+Cij_0(1,2))/2;
C0_2 = 2*Cij_0(6,6);
C0_3 = Cij_0(1,3);
C0_4 = Cij_0(3,1);
C0_5 = 4*Cij_0(5,5);
C0_6 = Cij_0(3,3);

C1_1 = (Cij_1(1,1)+Cij_1(1,2))/2;
C1_2 = 2*Cij_1(6,6);
C1_3 = Cij_1(1,3);
C1_4 = Cij_1(3,1);
C1_5 = 4*Cij_1(5,5);
C1_6 = Cij_1(3,3);

C2_1 = (Cij_2(1,1)+Cij_2(1,2))/2;
C2_2 = 2*Cij_2(6,6);
C2_3 = Cij_2(1,3);
C2_4 = Cij_2(3,1);
C2_5 = 4*Cij_2(5,5);
C2_6 = Cij_2(3,3);

C3_1 = (Cij_3(1,1)+Cij_3(1,2))/2;
C3_2 = 2*Cij_3(6,6);
C3_3 = Cij_3(1,3);
C3_4 = Cij_3(3,1);
C3_5 = 4*Cij_3(5,5);
C3_6 = Cij_3(3,3);

% XXXXXXXXXXXXXXXXX
C1212 = Cij_0(6,6);
C1133 = Cij_0(1,3);
C3333 = Cij_0(3,3);
C2323 = Cij_0(4,4);
C1111 = Cij_0(1,1);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Appendix A
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%A2 and A3 are the roots of the quadratic equation
%C1111*C2323*A^2+(C1133^2+2*C1133*C2323-C1111*C3333)*A+C3333*C2323=0
%1010.58 - 2021.17*x + 1010.58*x^2 = 0

pol = [C1111*C2323 (C1133^2+2*C1133*C2323-C1111*C3333) C3333*C2323];
r = roots(pol);
A3 = r(1);
A2 = r(2);
A1=C2323/C1212;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
epsilon1 = 4*pi*C1111*C2323*C1212*(A3-A1)*(A2-A1);
epsilon2 = 4*pi*C1111*C2323*C1212*(A3-A2)*(A1-A2);
epsilon3 = 4*pi*C1111*C2323*C1212*(A1-A3)*(A2-A3);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
d1 =(1/epsilon1)*(C2323-A1*C1111)*(C2323-A1*C1212);
d2 =(1/epsilon2)*(C2323-A2*C1111)*(C2323-A2*C1212);
d3 =(1/epsilon3)*(C2323-A3*C1111)*(C2323-A3*C1212);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
c1 = (1/epsilon1)*(C1133+C2323)*(C2323-A1*C1212);
c2 = (1/epsilon2)*(C1133+C2323)*(C2323-A2*C1212);
c3 = (1/epsilon3)*(C1133+C2323)*(C2323-A3*C1212);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
b1 = (1/epsilon1)*((C2323-A1*C1111)*(C3333-A1*C2323)+A1*(C1133+C2323)^2);
b2 = (1/epsilon2)*((C2323-A2*C1111)*(C3333-A2*C2323)+A2*(C1133+C2323)^2);
b3 = (1/epsilon3)*((C2323-A3*C1111)*(C3333-A3*C2323)+A3*(C1133+C2323)^2);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
a1 = (1/epsilon1)*((C1212-C1111)*(C3333-A1*C2323)+(C1133+C2323)^2);
a2 = (1/epsilon2)*((C1212-C1111)*(C3333-A2*C2323)+(C1133+C2323)^2);
a3 = (1/epsilon3)*((C1212-C1111)*(C3333-A3*C2323)+(C1133+C2323)^2);
%% Anisotropic P Tensor Calculation
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% For Inclusion 1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
lambda1_1 = sqrt((1/(1-A1*(gamma1)^2)));
lambda2_1 = sqrt((1/(1-A2*(gamma1)^2)));
lambda3_1 = sqrt((1/(1-A3*(gamma1)^2)));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
J1_1_1 = (2*lambda1_1^2)*(1-(1/2)*(gamma1)^2*A1*lambda1_1*log((lambda1_1+1)/(lambda1_1-1)));
J1_2_1 = (2*lambda2_1^2)*(1-(1/2)*(gamma1)^2*A2*lambda2_1*log((lambda2_1+1)/(lambda2_1-1)));
J1_3_1 = (2*lambda3_1^2)*(1-(1/2)*(gamma1)^2*A3*lambda3_1*log((lambda3_1+1)/(lambda3_1-1)));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
J2_1_1 = (2*lambda1_1^2)*(((1/2)*lambda1_1*log((lambda1_1+1)/(lambda1_1-1)))-1);
J2_2_1 = (2*lambda2_1^2)*(((1/2)*lambda2_1*log((lambda2_1+1)/(lambda2_1-1)))-1);
J2_3_1 = (2*lambda3_1^2)*(((1/2)*lambda3_1*log((lambda3_1+1)/(lambda3_1-1)))-1);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
P1_1 = (pi/2)*((b1-A1*a1)*J1_1_1+(b2-A2*a2)*J1_2_1+(b3-A3*a3)*J1_3_1);
P2_1 = (pi/2)*((2*b1-A1*a1)*J1_1_1+(2*b2-A2*a2)*J1_2_1+(2*b3-A3*a3)*J1_3_1);
P3_1 = (-pi/2)*(c1*(J1_1_1-(gamma1)^2*A1*J2_1_1)+c2*(J1_2_1-(gamma1)^2*A2*J2_2_1)+c3*(J1_3_1-(gamma1)^2*A3*J2_3_1));
P4_1 = (-pi/2)*(c1*(J1_1_1-(gamma1)^2*A1*J2_1_1)+c2*(J1_2_1-(gamma1)^2*A2*J2_2_1)+c3*(J1_3_1-(gamma1)^2*A3*J2_3_1));
P5_1 = pi*(((2*b1-A1*a1)*(gamma1)^2*J2_1_1-c1*(J1_1_1-(gamma1)^2*A1*J2_1_1)+d1*J1_1_1)...
    +((2*b2-A2*a2)*(gamma1)^2*J2_2_1-c2*(J1_2_1-(gamma1)^2*A2*J2_2_1)+d2*J1_2_1)...
    +((2*b3-A3*a3)*(gamma1)^2*J2_3_1-c3*(J1_3_1-(gamma1)^2*A3*J2_3_1)+d3*J1_3_1));
P6_1 = (2*pi)*(d1*(gamma1)^2*J2_1_1+d2*(gamma1)^2*J2_2_1+d3*(gamma1)^2*J2_3_1);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% For Inclusion 2
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
lambda1_2 = sqrt((1/(1-A1*(gamma2)^2)));
lambda2_2 = sqrt((1/(1-A2*(gamma2)^2)));
lambda3_2 = sqrt((1/(1-A3*(gamma2)^2)));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
J1_1_2 = (2*lambda1_2^2)*(1-(1/2)*(gamma2)^2*A1*lambda1_2*log((lambda1_2+1)/(lambda1_2-1)));
J1_2_2 = (2*lambda2_2^2)*(1-(1/2)*(gamma2)^2*A2*lambda2_2*log((lambda2_2+1)/(lambda2_2-1)));
J1_3_2 = (2*lambda3_2^2)*(1-(1/2)*(gamma2)^2*A3*lambda3_2*log((lambda3_2+1)/(lambda3_2-1)));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
J2_1_2 = (2*lambda1_2^2)*(((1/2)*lambda1_2*log((lambda1_2+1)/(lambda1_2-1)))-1);
J2_2_2 = (2*lambda2_2^2)*(((1/2)*lambda2_2*log((lambda2_2+1)/(lambda2_2-1)))-1);
J2_3_2 = (2*lambda3_2^2)*(((1/2)*lambda3_2*log((lambda3_2+1)/(lambda3_2-1)))-1);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
P1_2 = (pi/2)*((b1-A1*a1)*J1_1_2+(b2-A2*a2)*J1_2_2+(b3-A3*a3)*J1_3_2);
P2_2 = (pi/2)*((2*b1-A1*a1)*J1_1_2+(2*b2-A2*a2)*J1_2_2+(2*b3-A3*a3)*J1_3_2);
P3_2 = (-pi/2)*(c1*(J1_1_2-(gamma2)^2*A1*J2_1_2)+c2*(J1_2_2-(gamma2)^2*A2*J2_2_2)+c3*(J1_3_2-(gamma2)^2*A3*J2_3_2));
P4_2 = (-pi/2)*(c1*(J1_1_2-(gamma2)^2*A1*J2_1_2)+c2*(J1_2_2-(gamma2)^2*A2*J2_2_2)+c3*(J1_3_2-(gamma2)^2*A3*J2_3_2));
P5_2 = pi*(((2*b1-A1*a1)*(gamma2)^2*J2_1_2-c1*(J1_1_2-(gamma2)^2*A1*J2_1_2)+d1*J1_1_2)...
    +((2*b2-A2*a2)*(gamma2)^2*J2_2_2-c2*(J1_2_2-(gamma2)^2*A2*J2_2_2)+d2*J1_2_2)...
    +((2*b3-A3*a3)*(gamma2)^2*J2_3_2-c3*(J1_3_2-(gamma2)^2*A3*J2_3_2)+d3*J1_3_2));
P6_2 = (2*pi)*(d1*(gamma2)^2*J2_1_2+d2*(gamma2)^2*J2_2_2+d3*(gamma2)^2*J2_3_2);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% For Inclusion 3
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
lambda1_3 = sqrt((1/(1-A1*(gamma3)^2)));
lambda2_3 = sqrt((1/(1-A2*(gamma3)^2)));
lambda3_3 = sqrt((1/(1-A3*(gamma3)^2)));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
J1_1_3 = (2*lambda1_3^2)*(1-(1/2)*(gamma3)^2*A1*lambda1_3*log((lambda1_3+1)/(lambda1_3-1)));
J1_2_3 = (2*lambda2_3^2)*(1-(1/2)*(gamma3)^2*A2*lambda2_3*log((lambda2_3+1)/(lambda2_3-1)));
J1_3_3 = (2*lambda3_3^2)*(1-(1/2)*(gamma3)^2*A3*lambda3_3*log((lambda3_3+1)/(lambda3_3-1)));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
J2_1_3 = (2*lambda1_3^2)*(((1/2)*lambda1_3*log((lambda1_3+1)/(lambda1_3-1)))-1);
J2_2_3 = (2*lambda2_3^2)*(((1/2)*lambda2_3*log((lambda2_3+1)/(lambda2_3-1)))-1);
J2_3_3 = (2*lambda3_3^2)*(((1/2)*lambda3_3*log((lambda3_3+1)/(lambda3_3-1)))-1);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
P1_3 = (pi/2)*((b1-A1*a1)*J1_1_3+(b2-A2*a2)*J1_2_3+(b3-A3*a3)*J1_3_3);
P2_3 = (pi/2)*((2*b1-A1*a1)*J1_1_3+(2*b2-A2*a2)*J1_2_3+(2*b3-A3*a3)*J1_3_3);
P3_3 = (-pi/2)*(c1*(J1_1_3-(gamma3)^2*A1*J2_1_3)+c2*(J1_2_3-(gamma3)^2*A2*J2_2_3)+c3*(J1_3_3-(gamma3)^2*A3*J2_3_3));
P4_3 = (-pi/2)*(c1*(J1_1_3-(gamma3)^2*A1*J2_1_3)+c2*(J1_2_3-(gamma3)^2*A2*J2_2_3)+c3*(J1_3_3-(gamma3)^2*A3*J2_3_3));
P5_3 = pi*(((2*b1-A1*a1)*(gamma3)^2*J2_1_3-c1*(J1_1_3-(gamma3)^2*A1*J2_1_3)+d1*J1_1_3)...
    +((2*b2-A2*a2)*(gamma3)^2*J2_2_3-c2*(J1_2_3-(gamma3)^2*A2*J2_2_3)+d2*J1_2_3)...
    +((2*b3-A3*a3)*(gamma3)^2*J2_3_3-c3*(J1_3_3-(gamma3)^2*A3*J2_3_3)+d3*J1_3_3));
P6_3 = (2*pi)*(d1*(gamma3)^2*J2_1_3+d2*(gamma3)^2*J2_2_3+d3*(gamma3)^2*J2_3_3);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% The stiffness contribution tensor N for a spheroidal inhomogeneity
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Inclusion 1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% N = v1*inv(inv(C_1-C_0)+P)
% Let's say CC = (C_1-C_0)
% and CP = CC_i + P
% so N = v1*CP_i

CC1_1 = C1_1 - C0_1;
CC2_1 = C1_2 - C0_2;
CC3_1 = C1_3 - C0_3;
CC4_1 = C1_4 - C0_4;
CC5_1 = C1_5 - C0_5;
CC6_1 = C1_6 - C0_6;

delta_cc1 = 2*(CC1_1*CC6_1-CC3_1*CC4_1);

CC1_1_i = (CC6_1/(2*delta_cc1));
CC2_1_i = (1/CC2_1);
CC3_1_i = -(CC3_1/(delta_cc1));
CC4_1_i = -(CC4_1/(delta_cc1));
CC5_1_i = (4/CC5_1);
CC6_1_i = ((2*CC1_1)/(delta_cc1));

CP1_1 = CC1_1_i + P1_1;
CP2_1 = CC2_1_i + P2_1;
CP3_1 = CC3_1_i + P3_1;
CP4_1 = CC4_1_i + P4_1;
CP5_1 = CC5_1_i + P5_1;
CP6_1 = CC6_1_i + P6_1;

delta_cp1 = 2*(CP1_1*CP6_1-CP3_1*CP4_1);

CP1_1_i = (CP6_1/(2*delta_cp1));
CP2_1_i = (1/CP2_1);
CP3_1_i = -(CP3_1/(delta_cp1));
CP4_1_i = -(CP4_1/(delta_cp1));
CP5_1_i = (4/CP5_1);
CP6_1_i = ((2*CP1_1)/(delta_cp1));

N1_1 = v1*CP1_1_i;
N2_1 = v1*CP2_1_i;
N3_1 = v1*CP3_1_i;
N4_1 = v1*CP4_1_i;
N5_1 = v1*CP5_1_i;
N6_1 = v1*CP6_1_i;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Inclusion 2
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
CC1_2 = C2_1 - C0_1;
CC2_2 = C2_2 - C0_2;
CC3_2 = C2_3 - C0_3;
CC4_2 = C2_4 - C0_4;
CC5_2 = C2_5 - C0_5;
CC6_2 = C2_6 - C0_6;

delta_cc2 = 2*(CC1_2*CC6_2-CC3_2*CC4_2);

CC1_2_i = (CC6_2/(2*delta_cc2));
CC2_2_i = (1/CC2_2);
CC3_2_i = -(CC3_2/(delta_cc2));
CC4_2_i = -(CC4_2/(delta_cc2));
CC5_2_i = (4/CC5_2);
CC6_2_i = ((2*CC1_2)/(delta_cc2));

CP1_2 = CC1_2_i + P1_2;
CP2_2 = CC2_2_i + P2_2;
CP3_2 = CC3_2_i + P3_2;
CP4_2 = CC4_2_i + P4_2;
CP5_2 = CC5_2_i + P5_2;
CP6_2 = CC6_2_i + P6_2;

delta_cp2 = 2*(CP1_2*CP6_2-CP3_2*CP4_2);

CP1_2_i = (CP6_2/(2*delta_cp2));
CP2_2_i = (1/CP2_2);
CP3_2_i = -(CP3_2/(delta_cp2));
CP4_2_i = -(CP4_2/(delta_cp2));
CP5_2_i = (4/CP5_2);
CP6_2_i = ((2*CP1_2)/(delta_cp2));

N1_2 = v2*CP1_2_i;
N2_2 = v2*CP2_2_i;
N3_2 = v2*CP3_2_i;
N4_2 = v2*CP4_2_i;
N5_2 = v2*CP5_2_i;
N6_2 = v2*CP6_2_i;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Inclusion 3
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
CC1_3 = C3_1 - C0_1;
CC2_3 = C3_2 - C0_2;
CC3_3 = C3_3 - C0_3;
CC4_3 = C3_4 - C0_4;
CC5_3 = C3_5 - C0_5;
CC6_3 = C3_6 - C0_6;

delta_cc3 = 2*(CC1_3*CC6_3-CC3_3*CC4_3);

CC1_3_i = (CC6_3/(2*delta_cc3));
CC2_3_i = (1/CC2_3);
CC3_3_i = -(CC3_3/(delta_cc3));
CC4_3_i = -(CC4_3/(delta_cc3));
CC5_3_i = (4/CC5_3);
CC6_3_i = ((2*CC1_3)/(delta_cc3));

CP1_3 = CC1_3_i + P1_3;
CP2_3 = CC2_3_i + P2_3;
CP3_3 = CC3_3_i + P3_3;
CP4_3 = CC4_3_i + P4_3;
CP5_3 = CC5_3_i + P5_3;
CP6_3 = CC6_3_i + P6_3;

delta_cp3 = 2*(CP1_3*CP6_3-CP3_3*CP4_3);

CP1_3_i = (CP6_3/(2*delta_cp3));
CP2_3_i = (1/CP2_3);
CP3_3_i = -(CP3_3/(delta_cp3));
CP4_3_i = -(CP4_3/(delta_cp3));
CP5_3_i = (4/CP5_3);
CP6_3_i = ((2*CP1_3)/(delta_cp3));

N1_3 = v3*CP1_3_i;
N2_3 = v3*CP2_3_i;
N3_3 = v3*CP3_3_i;
N4_3 = v3*CP4_3_i;
N5_3 = v3*CP5_3_i;
N6_3 = v3*CP6_3_i;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Calculating Q and P tensors for the shape of omega
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% omega
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Inclusion 1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Q = C0*(J-P*C0)
% Let's say PC = P*C0
% and JP = J - PC
% so Q = C0*JP

PC1_1 = (2*P1_1*C0_1+P3_1*C0_4);
PC2_1 = (P2_1*C0_2);
PC3_1 = (2*P1_1*C0_3+P3_1*C0_6);
PC4_1 = (2*P4_1*C0_1+P6_1*C0_4);
PC5_1 = (1/2)*(P5_1*C0_5);
PC6_1 = (P6_1*C0_6+2*P4_1*C0_3);

J1 = 1/2;
J2 = 1;
J3 = 0;
J4 = 0;
J5 = 2;
J6 = 1;

JP1_1 = J1-PC1_1;
JP2_1 = J2-PC2_1;
JP3_1 = J3-PC3_1;
JP4_1 = J4-PC4_1;
JP5_1 = J5-PC5_1;
JP6_1 = J6-PC6_1;

q1_1 = (2*C0_1*JP1_1+C0_3*JP4_1);
q2_1 = (C0_2*JP2_1);
q3_1 = (2*C0_1*JP3_1+C0_3*JP6_1);
q4_1 = (2*C0_4*JP1_1+C0_6*JP4_1);
q5_1 = (1/2)*(C0_5*JP5_1);
q6_1 = (C0_6*JP6_1+2*C0_4*JP3_1);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Inclusion 2
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
PC1_2 = (2*P1_2*C0_1+P3_2*C0_4);
PC2_2 = (P2_2*C0_2);
PC3_2 = (2*P1_2*C0_3+P3_2*C0_6);
PC4_2 = (2*P4_2*C0_1+P6_2*C0_4);
PC5_2 = (1/2)*(P5_2*C0_5);
PC6_2 = (P6_2*C0_6+2*P4_2*C0_3);

J1 = 1/2;
J2 = 1;
J3 = 0;
J4 = 0;
J5 = 2;
J6 = 1;

JP1_2 = J1-PC1_2;
JP2_2 = J2-PC2_2;
JP3_2 = J3-PC3_2;
JP4_2 = J4-PC4_2;
JP5_2 = J5-PC5_2;
JP6_2 = J6-PC6_2;

q1_2 = (2*C0_1*JP1_2+C0_3*JP4_2);
q2_2 = (C0_2*JP2_2);
q3_2 = (2*C0_1*JP3_2+C0_3*JP6_2);
q4_2 = (2*C0_4*JP1_2+C0_6*JP4_2);
q5_2 = (1/2)*(C0_5*JP5_2);
q6_2 = (C0_6*JP6_2+2*C0_4*JP3_2);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Inclusion 3
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
PC1_3 = (2*P1_3*C0_1+P3_3*C0_4);
PC2_3 = (P2_3*C0_2);
PC3_3 = (2*P1_3*C0_3+P3_3*C0_6);
PC4_3 = (2*P4_3*C0_1+P6_3*C0_4);
PC5_3 = (1/2)*(P5_3*C0_5);
PC6_3 = (P6_3*C0_6+2*P4_3*C0_3);

J1 = 1/2;
J2 = 1;
J3 = 0;
J4 = 0;
J5 = 2;
J6 = 1;

JP1_3 = J1-PC1_3;
JP2_3 = J2-PC2_3;
JP3_3 = J3-PC3_3;
JP4_3 = J4-PC4_3;
JP5_3 = J5-PC5_3;
JP6_3 = J6-PC6_3;

q1_3 = (2*C0_1*JP1_3+C0_3*JP4_3);
q2_3 = (C0_2*JP2_3);
q3_3 = (2*C0_1*JP3_3+C0_3*JP6_3);
q4_3 = (2*C0_4*JP1_3+C0_6*JP4_3);
q5_3 = (1/2)*(C0_5*JP5_3);
q6_3 = (C0_6*JP6_3+2*C0_4*JP3_3);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Q_1(3,3) = (q6_1);
Q_1(1,3) = (q3_1);
Q_1(5,5) = (q5_1./4);
Q_1(6,6) = (q2_1./2);
Q_1(1,1) = (q1_1+Q_1(6,6));

Q_2(3,3) = (q6_2);
Q_2(1,3) = (q3_2);
Q_2(5,5) = (q5_2./4);
Q_2(6,6) = (q2_2./2);
Q_2(1,1) = (q1_2+Q_2(6,6));

Q_3(3,3) = (q6_3);
Q_3(1,3) = (q3_3);
Q_3(5,5) = (q5_3./4);
Q_3(6,6) = (q2_3./2);
Q_3(1,1) = (q1_3+Q_3(6,6));

omega_q = (v1*Q_1(3,3)+v2*Q_2(3,3)+v3*Q_3(3,3))/(v1*Q_1(1,1)+v2*Q_2(1,1)+v3*Q_3(1,1));
omega_q = 1/omega_q;

% P_1(3,3) = (p6_1);
% P_1(1,3) = (p3_1);
% P_1(5,5) = (p5_1./4);
% P_1(6,6) = (p2_1./2);
% P_1(1,1) = (p1_1+P_1(6,6));
% 
% P_2(3,3) = (p6_2);
% P_2(1,3) = (p3_2);
% P_2(5,5) = (p5_2./4);
% P_2(6,6) = (p2_2./2);
% P_2(1,1) = (p1_2+P_2(6,6));
% 
% omega_p = (v1*P_1(1,1)+v2*P_2(1,1))/(v1*P_1(3,3)+v2*P_2(3,3));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Estimating P tensor for the shape of omega
lambda1_o = sqrt((1/(1-A1*(omega_q)^2)));
lambda2_o = sqrt((1/(1-A2*(omega_q)^2)));
lambda3_o = sqrt((1/(1-A3*(omega_q)^2)));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
J1_1_o = (2*lambda1_o^2)*(1-(1/2)*(omega_q)^2*A1*lambda1_o*log((lambda1_o+1)/(lambda1_o-1)));
J1_2_o = (2*lambda2_o^2)*(1-(1/2)*(omega_q)^2*A2*lambda2_o*log((lambda2_o+1)/(lambda2_o-1)));
J1_3_o = (2*lambda3_o^2)*(1-(1/2)*(omega_q)^2*A3*lambda3_o*log((lambda3_o+1)/(lambda3_o-1)));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
J2_1_o = (2*lambda1_o^2)*(((1/2)*lambda1_o*log((lambda1_o+1)/(lambda1_o-1)))-1);
J2_2_o = (2*lambda2_o^2)*(((1/2)*lambda2_o*log((lambda2_o+1)/(lambda2_o-1)))-1);
J2_3_o = (2*lambda3_o^2)*(((1/2)*lambda3_o*log((lambda3_o+1)/(lambda3_o-1)))-1);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
P1_o = (pi/2)*((b1-A1*a1)*J1_1_o+(b2-A2*a2)*J1_2_o+(b3-A3*a3)*J1_3_o);
P2_o = (pi/2)*((2*b1-A1*a1)*J1_1_o+(2*b2-A2*a2)*J1_2_o+(2*b3-A3*a3)*J1_3_o);
P3_o = (-pi/2)*(c1*(J1_1_o-(omega_q)^2*A1*J2_1_o)+c2*(J1_2_o-(omega_q)^2*A2*J2_2_o)+c3*(J1_3_o-(omega_q)^2*A3*J2_3_o));
P4_o = (-pi/2)*(c1*(J1_1_o-(omega_q)^2*A1*J2_1_o)+c2*(J1_2_o-(omega_q)^2*A2*J2_2_o)+c3*(J1_3_o-(omega_q)^2*A3*J2_3_o));
P5_o = pi*(((2*b1-A1*a1)*(omega_q)^2*J2_1_o-c1*(J1_1_o-(omega_q)^2*A1*J2_1_o)+d1*J1_1_o)...
    +((2*b2-A2*a2)*(omega_q)^2*J2_2_o-c2*(J1_2_o-(omega_q)^2*A2*J2_2_o)+d2*J1_2_o)...
    +((2*b3-A3*a3)*(omega_q)^2*J2_3_o-c3*(J1_3_o-(omega_q)^2*A3*J2_3_o)+d3*J1_3_o));
P6_o = (2*pi)*(d1*(omega_q)^2*J2_1_o+d2*(omega_q)^2*J2_2_o+d3*(omega_q)^2*J2_3_o);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Estimating Effective Stiffness Tensor of the Heterogeneous Medium
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% C_eff = C_0 + inv(inv(v1.*N_1+v2.*N_2)-P)
% let's say N = inv(v1.*N_1+v2.*N_2)
% and let's say T = inv(N-P)
% and C_eff = C_0 + T

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
N1 = v1*N1_1+v2*N1_2+v3*N1_3;
N2 = v1*N2_1+v2*N2_2+v3*N2_3;
N3 = v1*N3_1+v2*N3_2+v3*N3_3;
N4 = v1*N4_1+v2*N4_2+v3*N4_3;
N5 = v1*N5_1+v2*N5_2+v3*N5_3;
N6 = v1*N6_1+v2*N6_2+v3*N6_3;

% Inverse of N using tensorial basis
delta_n = 2*(N1*N6-N3*N4);

N1_i = (N6/(2*delta_n));
N2_i = (1/N2);
N3_i = -(N3/(delta_n));
N4_i = -(N4/(delta_n));
N5_i = (4/N5);
N6_i = ((2*N1)/(delta_n));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
T1 = N1_i-P1_o;
T2 = N2_i-P2_o;
T3 = N3_i-P3_o;
T4 = N4_i-P4_o;
T5 = N5_i-P5_o;
T6 = N6_i-P6_o;

% Inverse of T using tensorial basis
delta_t = 2*(T1*T6-T3*T4);

T1_i = (T6/(2*delta_t));
T2_i = (1/T2);
T3_i = -(T3/(delta_t));
T4_i = -(T4/(delta_t));
T5_i = (4/T5);
T6_i = ((2*T1)/(delta_t));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

C1 = C0_1+T1_i;
C2 = C0_2+T2_i;
C3 = C0_3+T3_i;
C4 = C0_4+T4_i;
C5 = C0_5+T5_i;
C6 = C0_6+T6_i;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% RESULTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Cij_eff=zeros(6,6);

Cij_eff(3,3) = (C6);
Cij_eff(1,3) = (C3);
Cij_eff(5,5) = (C5./4);
Cij_eff(6,6) = (C2./2);
Cij_eff(1,1) = (C1+Cij_eff(6,6));
Cij_eff(2,2) = (Cij_eff(1,1));
Cij_eff(2,2) = (Cij_eff(1,1));
Cij_eff(3,1) = (Cij_eff(1,3));
Cij_eff(3,2) = (Cij_eff(1,3));
Cij_eff(2,3) = (Cij_eff(1,3));
Cij_eff(4,4) = (Cij_eff(5,5));
Cij_eff(2,1) = (Cij_eff(1,1)-2*Cij_eff(6,6));
Cij_eff(1,2) = (Cij_eff(1,1)-2*Cij_eff(6,6));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Five Independent Stiffness Coefficient
C11 = real(Cij_eff(1,1));
C33 = real(Cij_eff(3,3));
C13 = real(Cij_eff(1,3));
C55 = real(Cij_eff(5,5));
C66 = real(Cij_eff(6,6));

end


